[{"categories":["课程学习"],"content":"软件工程笔记2","date":"2022-09-27","objectID":"/software_engineering2/","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"软件的需求管理 ","date":"2022-09-27","objectID":"/software_engineering2/:0:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"软件需求的定义 需求是对外可见的系统特征 需求管理有三项任务： 学习 ——需求获取 剪枝 ——需求优选 文档化 ——撰写需求规格说明书 ","date":"2022-09-27","objectID":"/software_engineering2/:1:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求的内容 需求是系统为满足客户期望的目标而完成的行为 需求要体现出对问题领域的清晰理解 给出系统的使用场景和上下文 ","date":"2022-09-27","objectID":"/software_engineering2/:1:1","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求规约 单个需求项的质量: 准确（Concise） 正确（Correct） 明确（Non-ambiguous） 可行（Feasible） 可证（Verifiable） 整个需求集合的质量: 现实（Realistic） 精确（Concise） 全面（Complete） 一致（Consistent） ","date":"2022-09-27","objectID":"/software_engineering2/:1:2","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"获取软件需求的主要途径 需求分析师与客户沟通，制定需求文档 ","date":"2022-09-27","objectID":"/software_engineering2/:2:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"软件需求文档的框架 ","date":"2022-09-27","objectID":"/software_engineering2/:3:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求文档的组织形式 文档需要有逻辑组织结构 例如：参照IEEE的模板 典型的组织形式包括 按系统能够响应的各种外环境情况来组织 按系统特征来组织 按系统的响应方式来组织 按所管理的外部数据对象组织 按用户类型来组织 按软件的工作模式来组织 按子系统的划分来组织 ","date":"2022-09-27","objectID":"/software_engineering2/:3:1","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"软件需求规格说明SRS的风格 描述性的自然语言文本 • 用户故事 从用例模型产生 • 用例模型与需求转化可看成可逆的过程 • 如果需求模型以用例的形式表示，我们 可以逆向生成需求的完整集合 从需求数据库中生成 • 商业需求数据库有内置的功能来 生成经过筛选的需求规格说明 • 从产品线需求规格数据库中生成 特定产品的需求规格说明 从混合模型中生成 • 特征模型和用例模型 ","date":"2022-09-27","objectID":"/software_engineering2/:3:2","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"选择合适的需求规格说明方式 小型项目，1名程序猿，2个月的开发周期 程序猿直接和用户对话，写了两页纸的备忘录 大型项目，50 名程序猿，2年的开发周期 专门的团队进行需求建模与分析，撰写了500页的需求规格说明 ","date":"2022-09-27","objectID":"/software_engineering2/:3:3","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"生成不同风格SRS的方法 ","date":"2022-09-27","objectID":"/software_engineering2/:3:4","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"用户手册大纲 介绍 • 产品总览及基本原理 • 术语和基本特征 • 展示格式与报表格式的总结 • 手册的大纲 开始 • 开始指令 • 帮助模式 • 样例运行 操作模式: • 命令行/对话框/报告 高级特性 命令语法和系统选项 ","date":"2022-09-27","objectID":"/software_engineering2/:3:5","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"开发过程中各人员的分工 ","date":"2022-09-27","objectID":"/software_engineering2/:3:6","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"高质量需求规格说明 一个高质量的需求规格说明 是所有需求的集合 描述产品要提供的所有-能 是软件系统解决方案的-业合同的基础 是测试计划的基础 定义产品需求的度量标准 是产品需求跟踪的先决-件 影响开发产品的项目计划 ","date":"2022-09-27","objectID":"/software_engineering2/:3:7","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求规格说明SRS模板 SRS需要根据预先定义-标准章节模式来组织，即-据模板来撰写 SRS的模板使得撰写统-的SRS变得简单 对于QA人员来说定义SR-指标变得简单 模板也适用于业务需求-系统需求 模板可以被用于半自动地从需求数据库或者用例模型生成SRS ","date":"2022-09-27","objectID":"/software_engineering2/:3:8","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"IEEE-830 SRS模板大纲 ","date":"2022-09-27","objectID":"/software_engineering2/:3:9","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"SRS模板的优缺点 优点 模板提高效率 在有模板的情况下，面对一个完整的大纲，不容易遗漏重要的信息 缺点 并非对于所有的系统，模板的章节设计都是类似的 如果仅仅为了满足标准，而填写模板的所有章节，在不相关的章节，会加入一些没有意义的内容 读者很难将这些无意义的文字和真正 的需求分开 ","date":"2022-09-27","objectID":"/software_engineering2/:3:10","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"总结 尽快开始写需求 确定哪些属性将被用于分类和细化需求 产生一个初始版本来刺激反馈 询问用户往往比咨询专家更有用 撰写需求时需要遵循的法则： 使用简单、直接的语言 撰写可测试的需求 使用定义好的并达成共识的术语 一次只写一项需求 ","date":"2022-09-27","objectID":"/software_engineering2/:3:11","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求工程师的职责 ","date":"2022-09-27","objectID":"/software_engineering2/:4:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"当代的需求工程师 分析问题和解决问题能力 人际沟通及交流能力 软件工程知识和技能 应用领域有关知识 书面语言组织和表达能力 ","date":"2022-09-27","objectID":"/software_engineering2/:4:1","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"优秀需求工程师的目标 识别错误假设 确保一致性 提升依从性 减少彼此误解 提高支持速度和效率 提升客户满意度 撰写优质需求文档 ","date":"2022-09-27","objectID":"/software_engineering2/:4:2","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"需求分析师七宗罪 干扰 沉默 过度规约 矛盾 含糊 向前引用 不切实际与一厢情愿 软件开发过程 ","date":"2022-09-27","objectID":"/software_engineering2/:4:3","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"软件过程模型 软件过程模型是对软件过程的抽象描述，是定义任务之间关系和规程和方法 ","date":"2022-09-27","objectID":"/software_engineering2/:5:0","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["课程学习"],"content":"四种模型：瀑布模型、原型化模型、迭代式开发模型、可转换模型 瀑布模型 将基本的开发活动看成是一系列界限分明的独立阶段，这是 一种计划驱动的软件过程，有利于规范软件开发活动。以预测性为原则 、以文档驱动开发过程 、以过程控制为核心。 原型化模型 原型是一个部分开发的产品，用于加强对系统的理解，有助于明确需求和选择可行的设计策略。 迭代式开发模型 将描述、开发和验证等不同活动交织在一起，在开发过程中 建立一系列版本，将系统一部分一部分地逐步交付。 特点： 更快速地发布产品 追求产品创新 需求不确定性高 需要快速响应用户的变化 关注用户行为 增量模型：在每一个新的发布中逐步增加功能直到构造全部功能。 迭代模型：一开始提交一个完整系统，在后续发布中补充完善各子系统功能。 可转换模型 利用自动化的手段，通过一系列转换将需求规格说明转化为 一个可交付使用的系统。 由于数学方法具有严密性和准确性，形式化方法所交付 的系统具有较少的缺陷和较高的安全性。 • 特别适合于那些对安全性、可靠性和保密性要求极高的 软件系统，这些系统需要在投入运行前进行验证。 原型化模型和瀑布模型的区别： 原型化模型第一步就是创建一个快速原型，能够满足项目干系人与未来的用户可以与原型进行交互，再通过与相关干系人进行充分的讨论和分析，最终弄清楚当前系统的需求，进行了充分的了解之后，在原型的基础上开发出用户满意的产品。 而对于瀑布型，有点太过于理想化，现实中还是先制作出一个模型让客户看见更能有助于开发软件。 迭代模型，摒弃了传统的需求分析，设计，编码，测试的流程，而是将整个生命周期变成若干个冲刺（Sprint）阶段，而每一个阶段都是由以上若干或者全部传统的流程组成，在每一个阶段中，都会包含下面四个阶段：初始阶段，细化阶段，构建阶段，交付阶段。在初始阶段中，确认本次冲刺的范围，边界，系统选择的架构，计划，以及所需要的资源等信息。在细化阶段中，对问题进行建域，创建开发案例，创建模板以及准备工具等。在构建阶段的主要任务就是完成构建的开发并且进行测试，将完成的构建集成为产品，并且测试所有的功能（CI）。在交付阶段，主要是完成本次冲刺，将软件产品交付给相关的干系人。 可转换模型与他们有很大区别，它通过将无法直接测试的需求转换成可以直接测试的需求，保证了模型的安全、可靠、严密。 个人总结 这次课程的需求文档撰写令我印象深刻。 在现实的软件制作过程中，需求常常是不断变动的，甚至是推倒原有，重新制定的，可谓计划赶不上变化。作为软件开发人员，应当适应这种变化，就像课程里说的那样，不能将变化视为威胁，应当作为一种机遇，一种挑战。在这样一种不断变动的情况下，需求文档的撰写就变得格外的重要，负责和客户沟通，确定需求文档的需求分析师责任重大，他需要识别用户真正的需求，将其抽象，简化，再以文档的形式传达给开发的人员。作为沟通的桥梁，一个“翻译者”，他的水平决定了整个项目的下限！ 由此可见需求分析的重要性，在我看来一个软件的开发近半的时间应当放在需求分析，更改沟通交流上，毕竟当真正的文档确定，实现起来有了目标与细则，会十分迅速的！ 需求文档的撰写作为软件工程的“开头难”，是我们计算机专业学生所要格外重视的！ ","date":"2022-09-27","objectID":"/software_engineering2/:5:1","tags":["软件工程"],"title":"软件工程笔记2","uri":"/software_engineering2/"},{"categories":["网站建设"],"content":"关于 MAN","date":"2022-09-26","objectID":"/custom_domain/","tags":["疑惑"],"title":"关于Gitpage的自定义域名","uri":"/custom_domain/"},{"categories":["网站建设"],"content":"关于我的博客技术栈 使用的是markdown写作，hugo进行静态页面生成，push到blog仓库进行博客源码管理，另有一个仓库负责最后的静态页面托管。 其中第一个仓库使用github的workflow进行页面生成并且推到我的第二个仓库，我认为问题应该就出在这个workflow上 对于域名 gitpage的自定义域名是否只能用国外的域名商？（这应该是没道理的） 我的域名解析设置没有问题，应该是出错在git仓库中的cname文件上 总结来说 应该是workflow设置问题，每次推的时候要将cname一起推过去，同时要怎么设置我的dns？？ 已经解决！！！ workflow中有关于cname的设置，这样每次推就不会有问题了！ ","date":"2022-09-26","objectID":"/custom_domain/:0:0","tags":["疑惑"],"title":"关于Gitpage的自定义域名","uri":"/custom_domain/"},{"categories":["课程学习"],"content":"软件工程笔记1","date":"2022-09-21","objectID":"/software_engineering1/","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件工程第一章 ","date":"2022-09-21","objectID":"/software_engineering1/:0:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件工程无处不在 软件工程分为软件和工程两个部分。软件是软件工程研究的对象，也是软件工程的产品形态与客观存在。 工程是将理论和知识应用于实践的科学，其目的是经济有效地解决实际问题。软件工程是为了解决开发成本效益和软件质量的问题而产生的。倡导以工程的原理和原则进行软件的开发，用系统的可控的和有效的方式构建高质量的软件产品。 ","date":"2022-09-21","objectID":"/software_engineering1/:1:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件的本质特性 ","date":"2022-09-21","objectID":"/software_engineering1/:2:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件的定义: 软件 = 程序 + 数据 + 文档 程序: 按事先设计的功能和性能需求执行的指令序列 , 是可执行部分。 数据: 是程序能正常操纵信息的数据结构 , 是不可执行部分。 文档: 与程序开发, 维护 和 使用有关的图文材料 , 是不可执行部分。 ","date":"2022-09-21","objectID":"/software_engineering1/:2:1","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件具有复杂性、一致性、可变性、和不可见性等固有的内在特性 复杂性: 软件可以说是人类创造的最复杂的物体。 一致性: 不能单独存在，要依附一定的环境，需要遵从人为惯例并适应已有的技术和系统。 可变性: 软件在不停地版本更新，但是要注意修改带来的副作用，不断地修改可能导致软件的退化，最后结束生命周期。 不可见性: 看不见摸不着的逻辑实体，不具有空间的形体特征。 代码不是程序。 开发人员看不到代码的执行过程 ","date":"2022-09-21","objectID":"/software_engineering1/:3:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件工程的产生与发展 软件开发面临哪些主要的问题: 正是因为软件开发的过程中会遇到很多的困难，因此软件工程应运而生 软件工程致力于探索软件开发问题的解决之道 ","date":"2022-09-21","objectID":"/software_engineering1/:4:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件工程的发展史 ","date":"2022-09-21","objectID":"/software_engineering1/:5:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件工程的基本概念 工程的含义: 工程是将理论和知识应用于实践的科学，以便经济有效地解决问题。 什么是软件工程 软件工程是将系统性的、规范化的、可定量的方法应用于软件的开发、运行和维护,即工程化应用到软件上。 软件工程的目标 —— 创造足够好的软件。 软件工程的过程 软件工程方法 面向服务：在应用表现层次上将软件构件化，即应用业务过程由服务组成，而服务由构件组装而成。 面向过程：以算法作为基本构造单元，强调自顶向下的功能分解，将功能和数据进行一定程度的分离。 面向对象：以类为基本程序单元，对象是类的实例化，对象之间以消息传递为基本手段。 面向构件：寻求比类的粒度更大的且易于复用的构件，期望实现软件的再工程。 软件工程工具 软件开发的基本策略 ","date":"2022-09-21","objectID":"/software_engineering1/:6:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"软件开发的基本策略有软件复用，分而治之，逐步演进，优化折中。 软件复用：构造一个新的系统不必从零做起，直接复用已有的构件进行组装构件是经过反复使用验证的，由其组成的新系统具有较高的质量。软件复用不仅仅是代码复用，还包括 库函数、类库、模板（文档、网页等）、 设计模式 、组件 、框架。 分而治之：将一个复杂的问题分解成若干个简单的问题，然后逐个解决来源于人们生活与工作的经验，完全适合于技术领域。 逐步演进：软件更像一个活着的植物，其生长是一个逐步有序的过程。软件开发应该遵循软件的 客观规律，不断进行迭代式增量开发，最终交付符合客户价值的产品。 优化折中：软件工程师应当把优化当成一种责任，不断改进和提升软件质量；但是优化是一个多 目标的最优决策，在不可能使所有目标都得到优化时，需要进行折中实现整体最优。 ","date":"2022-09-21","objectID":"/software_engineering1/:6:1","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"业界人士谈软件工程 软件工程的开发不是一个人的工作，是很多人把自己的智慧和代码集合在一起，软件工程让很多人把自己的使用习惯都归结成一些规则，让每个人写出来的代码都是同样的思维，同样的思路，看起来像一个人写出来的代码，这就是设计模式。 业界人士认为程序员最重要的四个素质 1、拥有极强的代码的阅读和理解的能力，以及书写代码的能力 2、有极强的责任心和责任感，对整个软件产业的敬畏之心（对前人和用户的体验的敬畏，自我反省，自我提升） 3、有职业道德，对代码的品质的保证和对整个公司秘密的保护 4、需要有和其他程序员协同的能力，人与人之间的相处，人与人之间如何交换自己的代码，开发的心得，开发的经验 ","date":"2022-09-21","objectID":"/software_engineering1/:7:0","tags":["软件工程"],"title":"软件工程笔记1","uri":"/software_engineering1/"},{"categories":["课程学习"],"content":"网络实践1","date":"2022-09-15","objectID":"/new/","tags":["网络实践"],"title":"网络实践笔记1","uri":"/new/"},{"categories":["课程学习"],"content":"其中重要的知识 ","date":"2022-09-15","objectID":"/new/:0:0","tags":["网络实践"],"title":"网络实践笔记1","uri":"/new/"},{"categories":["课程学习"],"content":"路由器 操作系统叫ios nvram断电还有数据 路由器启动步骤 自检（power-on self test），引导装入程序 定位加载 ios（可以是云服务器上的系统） 定位ios 加载ios 定位加载配置软件 路由器的硬件组成： cpu ram flash（硬盘） nvram rom 各种接口 基本路由器设置： consle口（双反线） 串口（一边有时钟一边没时钟） 思科系统的模式 用户（最低级） 特权 全局 接口 子接口 行模式 ","date":"2022-09-15","objectID":"/new/:1:0","tags":["网络实践"],"title":"网络实践笔记1","uri":"/new/"},{"categories":["写在前面的话"],"content":"第一篇，留作纪念","date":"2022-09-13","objectID":"/first/","tags":["介绍"],"title":"第一条blog","uri":"/first/"},{"categories":["写在前面的话"],"content":"写在前面的话 作为一个计算机专业的学生，拥有一个个人博客是必不可少的，通过博客记录自身的学习与成长是一件很有成就的事，同时也能够很好地训练自己的技术能力 同时作为一个归档，记录我的成长！ ","date":"2022-09-13","objectID":"/first/:0:0","tags":["介绍"],"title":"第一条blog","uri":"/first/"},{"categories":null,"content":"关于 MAN","date":"2019-08-02","objectID":"/about/","tags":null,"title":"关于 MAN","uri":"/about/"},{"categories":null,"content":"写在前面的话 最近几天发现博客的好处，希望培养自己养成写博客的习惯，将自己积累的知识与经验通通记录下来，不管是为考研还是工作，都有一定的帮助。 ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 MAN","uri":"/about/"},{"categories":null,"content":"关于本博客的内容 记录我的学习与生活！ ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"关于 MAN","uri":"/about/"}]